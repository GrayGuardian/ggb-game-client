//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SocketUtilWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SocketUtil), typeof(System.Object));
		L.RegFunction("AddListenEvent", AddListenEvent);
		L.RegFunction("DelListenEvent", DelListenEvent);
		L.RegFunction("Conn", Conn);
		L.RegFunction("Emit", Emit);
		L.RegFunction("New", _CreateSocketUtil);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSocketUtil(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				SocketUtil obj = new SocketUtil();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: SocketUtil.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddListenEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SocketUtil obj = (SocketUtil)ToLua.CheckObject<SocketUtil>(L, 1);
			System.Action<string,object[]> arg0 = (System.Action<string,object[]>)ToLua.CheckDelegate<System.Action<string,object[]>>(L, 2);
			obj.AddListenEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DelListenEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SocketUtil obj = (SocketUtil)ToLua.CheckObject<SocketUtil>(L, 1);
			System.Action<string,object[]> arg0 = (System.Action<string,object[]>)ToLua.CheckDelegate<System.Action<string,object[]>>(L, 2);
			obj.DelListenEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Conn(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SocketUtil obj = (SocketUtil)ToLua.CheckObject<SocketUtil>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			Dpoch.SocketIO.SocketIO o = obj.Conn(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Emit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SocketUtil obj = (SocketUtil)ToLua.CheckObject<SocketUtil>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			byte[] arg1 = ToLua.CheckByteBuffer(L, 3);
			obj.Emit(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

