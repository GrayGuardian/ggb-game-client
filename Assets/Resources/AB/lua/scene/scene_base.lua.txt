local SceneBase = class("SceneBase")

------------------- 继承重写 -------------------
--加载参数二次重写默认值
function SceneBase:GET_Default_OPTS()
    return nil
end
function SceneBase:onLoad()
end
function SceneBase:onDestroy()
end
------------------- 继承重写 -------------------

function SceneBase:init(info, param, opts)
    print("加载场景-", info.name, " Init")
    self.info = info
    self.param = param

    opts = opts and opts or {}
    self.opts = opts
    if self:GET_Default_OPTS() ~= nil then
        for key, value in pairs(self:GET_Default_OPTS()) do
            if self.opts[key] == nil then
                self.opts[key] = value
            end
        end
    end

    print(utils.serialize(self.opts))

    self:_onLoad()
end
function SceneBase:_onLoad()
    if self.opts.isCloseAllUI == true then
        ui:closeAllUI()
    end
    self:onLoad()
end
function SceneBase:_onDestroy()
    print("卸载场景-" .. self.info.name .. " >>>>>>>>>>>>>>>>>>>>>>>> onDestroy")
    self:onDestroy()
end

return SceneBase
