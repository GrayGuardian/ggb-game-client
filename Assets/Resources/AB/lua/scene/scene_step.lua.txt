local base = require("scene_base")
local SceneLogin = class("SceneStep", base)

function SceneLogin:onLoad()
    -- ui:loadScene("UpRes")
    --test
    local error = {code = 82222, msg = "error"}
    local ccccc = {NumArr = {1, 2, 3}}
    local aaaaa = {
        errorArr = {{code = 401, msg = "error1"}, {code = 402, msg = "error2"}, {code = 403, msg = "error3"}}
    }
    local data = {str = "我是str", numArr = {1, 2, 3}, aaaaa = aaaaa, ccccc = ccccc, error = error}
    print(pb:encode("common_pb.test", data))
    print(tostring(pb:decode("common_pb.test", pb:encode("common_pb.test", data))))

    --httpUtil:Post_Asyn("http://127.0.0.1", pb:encode("common_pb.test", data))

    --print(pb:decode("common_pb.Error", pb:encode("common_pb.Error", error)):ByteSize())
    --httpUtil:Post_Asyn("http://127.0.0.1", pb:encode("common_pb.Error", error))

    -- print(pb:encode("common_pb.Error", error))
    -- print(#pb:encode("common_pb.Error", error))

    local result = httpUtil:Post("http://127.0.0.1:300", pb:encode("common_pb.test", data)).bytes

    local aa = ""
    print(tostring(result))
    for i = 0, result.Length - 1 do
        print(result[i], string.char(result[i]))
        aa = aa .. string.char(result[i])
    end
    print(aa, #aa)
    print(tostring(pb:decode("common_pb.test", aa)))

    --ui:loadScene("Login")
end
return SceneLogin
