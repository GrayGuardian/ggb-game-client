local Comp = class("Comp")

-- CS
function Comp:addCSComponent(node, comp)
    return node.gameObject:AddComponent(typeof(comp))
end
function Comp:getCSComponent(node, comp)
    return node.gameObject:GetComponent(typeof(comp))
end
function Comp:getCSComponentInChildren(node, comp)
    return node.gameObject:GetComponentInChildren(typeof(comp))
end
function Comp:getCSComponentsInChildren(node, comp)
    return node.gameObject:GetComponentsInChildren(typeof(comp))
end
function Comp:getCSComponentInParent(node, comp)
    return node.gameObject:GetComponentInParent(typeof(comp))
end
function Comp:getCSComponentsInParent(node, comp)
    return node.gameObject:GetComponentsInParent(typeof(comp))
end

--Lua
function Comp:addComponent(node, compName, param)
    local compType = require("comp_" .. compName)
    local csComp = self:addCSComponent(node, MonoComponent)
    local comp = compType:new(compName, param)

    comp:bind(csComp)
    return comp
end
return Comp
