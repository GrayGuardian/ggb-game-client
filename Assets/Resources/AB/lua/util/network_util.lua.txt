local Network = class("Network")
local socket = require("socket_util"):new()
function Network:init()
    broadcast:on(BROADCAST_CODE.SOCKET_CONNECT,function ()self.onConnect(self);end);
    broadcast:on(BROADCAST_CODE.SOCKET_CONNECTERROR,function ()self.onConnectError(self);end);
    broadcast:on(BROADCAST_CODE.SOCKET_DISCONNECT,function ()self.onDisconnect(self);end);
    broadcast:on(BROADCAST_CODE.SOCKET_ERROR,function (error)self.onError(self,error);end);
    broadcast:on(BROADCAST_CODE.SOCKET_MESSAGE,function(data)self.onMessage(self,data.key,data.bytes);end);

    broadcast:on(BROADCAST_CODE.SOCKET_EVENT("error"),function (data)
        print('收到逻辑错误>>',tostring(data));
    end);
    broadcast:on(BROADCAST_CODE.SOCKET_EVENT("connRet"),function (data)
        print('connRet>>',tostring(data));
    end);
end
function Network:onConnect()
    print("Socket connect!")
    self:emit("conn", {token = "woshiToken", pid = 990, aid = 123333})
end
function Network:onConnectError()
    print("Socket connect error!")
end
function Network:onDisconnect()
    print("Socket disconnect!")
end
function Network:onError(error)
    print("Socket Error:", error)
end
function Network:onMessage(key,bytes)
    local body = pb:decode("socket_pb.s2c", bytes);
    if body == nil then
        return;
    end
    local router = body.router;
    local data = body[router];

    broadcast:notify(BROADCAST_CODE.SOCKET_EVENT(router),data);
end
function Network:conn(url)
    socket:conn(url)
end
function Network:emit(router, data)
    local body = {router = router}
    body[router] = data
    body = pb:encode("socket_pb.c2s", body)
    socket:emit("c2s", body)
end
return Network;