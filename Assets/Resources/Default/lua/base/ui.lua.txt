local UI = class("UI")

function UI:init()
    broadcast:on(
        BROADCAST_CODE.SCENE_LOADED,
        function(info)
            self:sceneLoad(info)
        end
    )
    self.sceneParamMap = {}
    self.sceneComp = nil
end
-- 场景lua文件加载
function UI:sceneLoad(info)
    print("跳转场景>>>>", "idx:", info.idx, "name:", info.name)
    if self.sceneComp ~= nil then
        print("卸载场景lua脚本>>" .. util.serialize(self.sceneComp.info))
        self.sceneComp._onDestroy(self.sceneComp)
    end
    luaName = string.lower("scene_" .. info.name)
    print(self.sceneParamMap[info.name])
    print("加载场景lua脚本>>" .. luaName)
    self.sceneComp = require(luaName):new(info, self.sceneParamMap[info.name])
    self.sceneParamMap[info.name] = nil
end
-- 切换场景
function UI:loadScene(key, param)
    self.sceneParamMap[key] = param
    SceneManager.LoadScene(key)
end
return UI
